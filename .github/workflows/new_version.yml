name: Create a new version and push to GitHub

on:
  repository_dispatch:
    types: [study_repo_publish]
  workflow_dispatch:

jobs:
  create_version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - uses: actions/checkout@v4
        with:
          repository: revisit-studies/study
          path: study

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'yarn'
          cache-dependency-path: study/yarn.lock
    
      - name: Install study dependencies
        run: yarn --cwd=./study install --immutable

      - name: Build study docs
        run: |
          yarn --cwd=./study buildDocs
          yarn --cwd=./study node libraryDocGenerator.cjs
        working-directory: ./study

      - name: Get the 2 latest tags
        id: get_tags
        run: |
          cd study
          git fetch --tags
          tags=$(git for-each-ref --sort='*authordate' --format='%(tag)' refs/tags)
          tags=($tags)
          echo "Latest tag: ${tags[${#tags[@]} - 1]}"
          echo "Second latest tag: ${tags[${#tags[@]} - 2]}"
          echo "latest_tag=${tags[${#tags[@]} - 1]}" >> $GITHUB_OUTPUT
          echo "second_latest_tag=${tags[${#tags[@]} - 2]}" >> $GITHUB_OUTPUT

      # Yarn install for docusaurus
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Create a version based on the second latest tag
        run: |
          yarn makeVersion ${{ steps.get_tags.outputs.second_latest_tag }}

      - name: Copy new study docs to docs and cleanup
        run: |
          cp -r study/docs/* ./docs/typedoc/
          cp -r study/docsLibraries/* ./docs/libraries/
          rm -rf study

      - name: Modify the current version in docusaurus.config.ts
        run: |
          sed -i "s/current: { label: '.*', path: '' },/current: { label: '${{ steps.get_tags.outputs.latest_tag }}', path: '' },/" docusaurus.config.ts
          
      - name: Commit and push changes
        run: |
          git config --global user.email "jackwilburn@tutanota.com"
          git config --global user.name "Jack Wilburn"
          git pull
          git add .
          git commit -m "Create a new version based on the latest tag"
          git push
