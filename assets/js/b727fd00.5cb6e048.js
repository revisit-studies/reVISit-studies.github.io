"use strict";(globalThis.webpackChunkdocs_website=globalThis.webpackChunkdocs_website||[]).push([[67489],{11470:(e,n,t)=>{t.d(n,{A:()=>T});var r=t(96540),a=t(34164),i=t(17559),s=t(23104),o=t(56347),l=t(205),c=t(57485),u=t(31682),d=t(70679);function h(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r}))}(t);return function(e){const n=(0,u.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function f({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const t=(0,o.W6)(),a=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(a),(0,r.useCallback)(e=>{if(!a)return;const n=new URLSearchParams(t.location.search);n.set(a,e),t.replace({...t.location,search:n.toString()})},[a,t])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,i=p(e),[s,o]=(0,r.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!f({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i})),[c,u]=m({queryString:t,groupId:a}),[h,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,a]=(0,d.Dv)(n);return[t,(0,r.useCallback)(e=>{n&&a.set(e)},[n,a])]}({groupId:a}),x=(()=>{const e=c??h;return f({value:e,tabValues:i})?e:null})();(0,l.A)(()=>{x&&o(x)},[x]);return{selectedValue:s,selectValue:(0,r.useCallback)(e=>{if(!f({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),g(e)},[u,g,i]),tabValues:i}}var x=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(74848);function v({className:e,block:n,selectedValue:t,selectValue:r,tabValues:i}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),c=e=>{const n=e.currentTarget,a=o.indexOf(n),s=i[a].value;s!==t&&(l(n),r(s))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:r})=>(0,y.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:u,onClick:c,...r,className:(0,a.A)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function j({lazy:e,children:n,selectedValue:t}){const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===t);return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:i.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function w(e){const n=g(e);return(0,y.jsxs)("div",{className:(0,a.A)(i.G.tabs.container,"tabs-container",b.tabList),children:[(0,y.jsx)(v,{...n,...e}),(0,y.jsx)(j,{...n,...e})]})}function T(e){const n=(0,x.A)();return(0,y.jsx)(w,{...e,children:h(e.children)},String(n))}},19365:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var r=t(34164);const a={tabItem:"tabItem_Ymn6"};var i=t(74848);function s({children:e,hidden:n,className:t}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,t),hidden:n,children:e})}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(96540);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}},45505:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"designing-studies/config-generation/fixed-order","title":"Example 1: Fixed Order","description":"The example we provide below is very similar to our click accuracy test that you can view in our demo page.","source":"@site/versioned_docs/version-v1.0.6/designing-studies/config-generation/fixed-order.md","sourceDirName":"designing-studies/config-generation","slug":"/designing-studies/config-generation/fixed-order","permalink":"/docs/v1.0.6/designing-studies/config-generation/fixed-order","draft":false,"unlisted":false,"tags":[],"version":"v1.0.6","frontMatter":{},"sidebar":"docs","previous":{"title":"Config File Generation","permalink":"/docs/v1.0.6/designing-studies/config-generation/"},"next":{"title":"Example 2: Random Sample","permalink":"/docs/v1.0.6/designing-studies/config-generation/random-sample"}}');var a=t(74848),i=t(28453),s=t(11470),o=t(19365);const l={},c="Example 1: Fixed Order",u={},d=[];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"example-1-fixed-order",children:"Example 1: Fixed Order"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["The example we provide below is very similar to our ",(0,a.jsx)(n.a,{href:"https://github.com/revisit-studies/study/tree/main/public/demo-click-accuracy-test",children:"click accuracy test"})," that you can view in our demo page."]})}),"\n",(0,a.jsxs)(n.p,{children:["Suppose we have a base component which allows the parameters ",(0,a.jsx)(n.code,{children:"speed"})," and ",(0,a.jsx)(n.code,{children:"taskid"})," and metadata fields ",(0,a.jsx)(n.code,{children:"nr-dots"})," and ",(0,a.jsx)(n.code,{children:"speed"}),". Now suppose we want to create 100 copies of this base component with varying speeds. In this example, we'll walk through the generation of these base components by iterating through a loop 100 times."]}),"\n",(0,a.jsx)(n.p,{children:"We'll start by creating a function that, when called, will return an Object containing the base components with variable speed."}),"\n","\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(o.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def createTrials():\n    allTrials = {}\n    for i in range(100):\n        allTrials["trial-" + str(i)] = {\n            "baseComponent": "trial",\n            "meta": {\n                "nr-dots": 1,\n                "speed": 300 + i\n            },\n            "parameters": {\n                "speed": 300 + i,\n                "taskid": "accuracy"\n            }\n        }\n    return allTrials\n'})})}),(0,a.jsx)(o.A,{value:"node",label:"Node.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'function createTrials() {\n  const allTrials = {};\n  for (let i = 0; i < 100; i++) {\n    allTrials[`trial-${i}`] = {\n      baseComponent: "trial",\n      meta: {\n        "nr-dots": 1,\n        speed: 300 + i,\n      },\n      parameters: {\n        speed: 300 + i,\n        taskid: "accuracy",\n      },\n    };\n  }\n  return allTrials;\n}\n'})})})]}),"\n",(0,a.jsxs)(n.p,{children:["Now that we have a function to create the components, we'll create a function that generates our ",(0,a.jsx)(n.a,{href:"../../study-sequences",children:"Sequence"}),". In this example, we are doing a fixed order sequence so we only need to generate a sequence object whose ",(0,a.jsx)(n.code,{children:"components"})," key is the list of the trial names."]}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(o.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def createFixedOrder(allTrials):\n    trial_keys = [key for key in allTrials]\n\n    # Create the sequence structure\n    sequence = {\n        "sequence": {\n            "order": "fixed",\n            "components": [\n                "introduction"\n            ] + trial_keys  # Append the trial keys\n        }\n    }\n    return sequence\n'})})}),(0,a.jsx)(o.A,{value:"node",label:"Node.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'function createFixedOrder(allTrials) {\n  const trialKeys = Object.keys(allTrials);\n\n  const sequence = {\n    sequence: {\n      order: "fixed",\n      components: ["introduction", ...trialKeys],\n    },\n  };\n  return sequence;\n}\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"Lastly, we'll have a section of our code to write the final output to a JSON file."}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(o.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import json\n\nwith open('config.json', 'w') as outfile:\n    json.dump(allTrials, outfile, indent=4)\n"})})}),(0,a.jsx)(o.A,{value:"node",label:"Node.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const fs = require("fs");\nconst jsonData = JSON.stringify(seq, null, 2);\n\nfs.writeFile("config.json", jsonData, (err) => {\n  if (err) {\n    console.error("Error writing to file", err);\n  }\n});\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"Combining everything together, we get the following:"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(o.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'\ninitialConfig = {\n    "$schema": "https://raw.githubusercontent.com/revisit-studies/study/v1.0.2/src/parser/StudyConfigSchema.json",\n    "studyMetadata": {\n      "title": "Dynamic React Stimuli and Provenance Tracking",\n      "version": "pilot",\n      "authors": [\n        "The reVISit Team"\n      ],\n      "date": "2023-06-15",\n      "description": "A demo of using dynamic React stimuli and using provenance tracking with the trrack library for data collection.",\n      "organizations": [\n        "University of Utah",\n        "WPI",\n        "University of Toronto"\n      ]\n    },\n    "uiConfig": {\n      "contactEmail": "contact@revisit.dev",\n      "helpTextPath": "demo-click-accuracy-test/assets/help.md",\n      "logoPath": "revisitAssets/revisitLogoSquare.svg",\n      "withProgressBar": True,\n      "autoDownloadStudy": False,\n      "sidebar": True\n    },\n    "baseComponents": {\n      "trial": {\n        "description": "try to click on the center of the moving dot",\n        "instruction": "Click on the moving dot",\n        "type": "react-component",\n        "path": "demo-click-accuracy-test/assets/ClickAccuracyTest.tsx",\n        "nextButtonLocation": "sidebar",\n        "response": [\n          {\n            "id": "accuracy",\n            "prompt": "Your click distance to circle center",\n            "required": True,\n            "location": "sidebar",\n            "type": "iframe"\n          }\n        ]\n      },\n\n    },\n    "components": {},\n    "sequence": {}\n  }\n\n\ndef createTrials():\n    allTrials = {}\n    for i in range(100):\n        allTrials["trial-" + str(i)] = {\n            "baseComponent": "trial",\n            "meta": {\n                "nr-dots": 1,\n                "speed": 300 + i\n            },\n            "parameters": {\n                "speed": 300 + i,\n                "taskid": "accuracy"\n            }\n        }\n    return allTrials\n\n\n# Create fixed order\ndef createFixedOrder(allTrials):\n    trial_keys = [key for key in allTrials]\n\n    # Create the sequence structure\n    sequence = {\n        "sequence": {\n            "order": "fixed",\n            "components": [\n                "introduction"\n            ] + trial_keys  # Append the trial keys\n        }\n    }\n    return sequence\n\n\nallTrials = createTrials()\nseq = createFixedOrder(allTrials)\n\n# Set Components\ninitialConfig[\'components\'] = allTrials\n\n# Set Sequence\ninitialConfig[\'sequence\'] = seq\n\nimport json\n\nwith open(\'config.json\', \'w\') as outfile:\n    json.dump(initialConfig, outfile, indent=4)\n'})})}),(0,a.jsx)(o.A,{value:"node",label:"Node.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const initialConfig = {\n  $schema:\n    "https://raw.githubusercontent.com/revisit-studies/study/v1.0.2/src/parser/StudyConfigSchema.json",\n  studyMetadata: {\n    title: "Dynamic React Stimuli and Provenance Tracking",\n    version: "pilot",\n    authors: ["The reVISit Team"],\n    date: "2023-06-15",\n    description:\n      "A demo of using dynamic React stimuli and using provenance tracking with the trrack library for data collection.",\n    organizations: ["University of Utah", "WPI", "University of Toronto"],\n  },\n  uiConfig: {\n    contactEmail: "contact@revisit.dev",\n    helpTextPath: "demo-click-accuracy-test/assets/help.md",\n    logoPath: "revisitAssets/revisitLogoSquare.svg",\n    withProgressBar: true,\n    autoDownloadStudy: false,\n    sidebar: true,\n  },\n  baseComponents: {\n    trial: {\n      description: "try to click on the center of the moving dot",\n      instruction: "Click on the moving dot",\n      type: "react-component",\n      path: "demo-click-accuracy-test/assets/ClickAccuracyTest.tsx",\n      nextButtonLocation: "sidebar",\n      response: [\n        {\n          id: "accuracy",\n          prompt: "Your click distance to circle center",\n          required: true,\n          location: "sidebar",\n          type: "iframe",\n        },\n      ],\n    },\n  },\n  components: {},\n  sequence: {},\n};\n\n// Create trials\nfunction createTrials() {\n  const allTrials = {};\n  for (let i = 0; i < 100; i++) {\n    allTrials[`trial-${i}`] = {\n      baseComponent: "trial",\n      meta: {\n        "nr-dots": 1,\n        speed: 300 + i,\n      },\n      parameters: {\n        speed: 300 + i,\n        taskid: "accuracy",\n      },\n    };\n  }\n  return allTrials;\n}\n\n// Create fixed order\nfunction createFixedOrder(allTrials) {\n  const trialKeys = Object.keys(allTrials);\n\n  const sequence = {\n    sequence: {\n      order: "fixed",\n      components: ["introduction", ...trialKeys],\n    },\n  };\n  return sequence;\n}\n\n// Call \'createTrials\' function\nconst allTrials = createTrials();\n// Pass in the trials to the \'createFixedOrder\' function to get full sequence\nconst seq = createFixedOrder(allTrials);\n\n// Set Components\ninitialConfig.components = allTrials;\n\n// Set Sequence\ninitialConfig.sequence = seq;\n\nconst fs = require("fs");\nconst seqData = JSON.stringify(seq, null, 2);\nconst trialData = JSON.stringify(allTrials, null, 2);\nconst configData = JSON.stringify(initialConfig, null, 2);\n// Output to JSON file\nfs.writeFile("out/config-click-accuracy.json", configData, (err) => {\n  if (err) {\n    console.error("Error writing to file", err);\n  }\n});\n\nfs.writeFile("out/trial.json", trialData, (err) => {\n  if (err) {\n    console.error("Error writing to file", err);\n  }\n});\n\nfs.writeFile("out/seq-fixed-order.json", seqData, (err) => {\n  if (err) {\n    console.error("Error writing to file", err);\n  }\n});\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"You can check the code and output at CodeSandbox using the link below:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/config-gen-demo1-cgzlg5",children:"Python"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/cpsmvd",children:"Node"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);