"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[3452],{82223:(e,n,r)=>{r.d(n,{A:()=>s});r(96540);var t=r(34164);const a={tabItem:"tabItem_Ymn6"};var o=r(74848);function s(e){let{children:n,hidden:r,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,s),hidden:r,children:n})}},72206:(e,n,r)=>{r.d(n,{A:()=>_});var t=r(96540),a=r(34164),o=r(80052),s=r(56347),l=r(35793),i=r(99025),c=r(4430),u=r(44148);function d(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:a}}=e;return{value:n,label:r,attributes:t,default:a}}))}(r);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function h(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:r}=e;const a=(0,s.W6)(),o=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,i.aZ)(o),(0,t.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(a.location.search);n.set(o,e),a.replace({...a.location,search:n.toString()})}),[o,a])]}function f(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,o=p(e),[s,i]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:o}))),[c,d]=m({queryString:r,groupId:a}),[f,g]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,o]=(0,u.Dv)(r);return[a,(0,t.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:a}),b=(()=>{const e=c??f;return h({value:e,tabValues:o})?e:null})();(0,l.A)((()=>{b&&i(b)}),[b]);return{selectedValue:s,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),g(e)}),[d,g,o]),tabValues:o}}var g=r(75251);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=r(74848);function v(e){let{className:n,block:r,selectedValue:t,selectValue:s,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),u=e=>{const n=e.currentTarget,r=i.indexOf(n),a=l[r].value;a!==t&&(c(n),s(a))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const r=i.indexOf(e.currentTarget)+1;n=i[r]??i[0];break}case"ArrowLeft":{const r=i.indexOf(e.currentTarget)-1;n=i[r]??i[i.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":r},n),children:l.map((e=>{let{value:n,label:r,attributes:o}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{i.push(e)},onKeyDown:d,onClick:u,...o,className:(0,a.A)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function w(e){let{lazy:n,children:r,selectedValue:o}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===o));return e?(0,t.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function y(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",b.tabList),children:[(0,x.jsx)(v,{...n,...e}),(0,x.jsx)(w,{...n,...e})]})}function _(e){const n=(0,g.A)();return(0,x.jsx)(y,{...e,children:d(e.children)},String(n))}},32085:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"designing-studies/config-generation/random-sample","title":"Example 2: Random Sample","description":"In the previous example, we generated 100 trials with varying speeds and organized them into a fixed order sequence. Here, we will modify this click-accuracy test by introducing different colors for the on-screen dot. The new study will still present trials in increasing speed order, with the dot\'s color randomized for each trial.","source":"@site/docs/designing-studies/config-generation/random-sample.md","sourceDirName":"designing-studies/config-generation","slug":"/designing-studies/config-generation/random-sample","permalink":"/docs/designing-studies/config-generation/random-sample","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Example 1: Fixed Order","permalink":"/docs/designing-studies/config-generation/fixed-order"},"next":{"title":"Example 3: Latin Square","permalink":"/docs/designing-studies/config-generation/latin-square"}}');var a=r(74848),o=r(28453),s=r(72206),l=r(82223);const i={},c="Example 2: Random Sample",u={},d=[];function p(e){const n={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"example-2-random-sample",children:"Example 2: Random Sample"})}),"\n",(0,a.jsx)(n.p,{children:"In the previous example, we generated 100 trials with varying speeds and organized them into a fixed order sequence. Here, we will modify this click-accuracy test by introducing different colors for the on-screen dot. The new study will still present trials in increasing speed order, with the dot's color randomized for each trial."}),"\n",(0,a.jsx)(n.p,{children:"Instead of having one component for each speed, we will have five different components for each speed -- each representing a different color. In our sequence, we will have each of these sets fo components as a single random block. Then, we set the number of samples value to 1 so that we will randomly pick one of the colors from the component block to display to the user."}),"\n",(0,a.jsx)(n.p,{children:"Below is the intended sequence output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "order": "fixed",\n  "components": [\n    "introduction",\n    {\n      "order": "random",\n      "numSamples": 1,\n      "components": [\n        "trial_300_red",\n        "trial_300_blue",\n        "trial_300_green",\n        "trial_300_orange",\n        "trial_300_pink"\n      ]\n    },\n    {\n      "order": "random",\n      "numSamples": 1,\n      "components": [\n        "trial_310_red",\n        "trial_310_blue",\n        "trial_310_green",\n        "trial_310_orange",\n        "trial_310_pink"\n      ]\n    },\n    {\n      "order": "random",\n      "numSamples": 1,\n      "components": [\n        "trial_320_red",\n        "trial_320_blue",\n        "trial_320_green",\n        "trial_320_orange",\n        "trial_320_pink"\n      ]\n    },\n    \n    ...\n\n'})}),"\n",(0,a.jsx)(n.p,{children:"We will start by generating the trials."}),"\n","\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(l.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'colorList = [\'red\',\'blue\',\'green\',\'orange\',\'pink\']\n# Generate a list of increasing speeds starting at 300 and increasing to 400 with increments of 10.\nspeedList = [300 + i * 10 for i in range(10)]\n\n\ndef createTrials():\n    allTrials = {}\n    for s in speedList: \n        # Create a new trial/component for each color in our color list.\n        for c in colorList:\n            allTrials["trial_" + str(s) + \'_\' + c] = {  \n                "baseComponent": "trial",\n                "meta": {\n                    "nr-dots": 1,\n                    "speed": s,\n                    "color": c,\n                },\n                "parameters": {\n                    "speed": s,\n                    "color": c,\n                    "taskid": "accuracy"\n                }\n            }\n    return allTrials\n\ntrials = createTrials()\n\n'})})}),(0,a.jsx)(l.A,{value:"node",label:"Node.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'const colorList = ["red", "blue", "green", "orange", "pink"];\n// Generate a list of increasing speeds starting at 300 and increasing to 400 with increments of 10.\nconst speedList = Array.from({ length: 10 }, (_, i) => 300 + i * 10);\n\nfunction createTrials() {\n  const allTrials = {};\n  speedList.forEach((speed) => {\n    // Create a new trial/component for each color in our color list.\n    colorList.forEach((color) => {\n      allTrials[`trial_${speed}_${color}`] = {\n        baseComponent: "trial",\n        meta: {\n          "nr-dots": 1,\n          speed: speed,\n          color: color,\n        },\n        parameters: {\n          speed: speed,\n          color: color,\n          taskid: "accuracy",\n        },\n      };\n    });\n  });\n  return allTrials;\n}\ntrials = createTrials()\n\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"To generate the sequence, we create a random subsequence for each speed where the components are the varying colors at that speed."}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(l.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'\ndef createOrder():  \n    components = ["introduction"]  \n    # Create the sequence structure\n    sequence = {\n        "order": "fixed",  \n    }\n\n    for speed in speedList:\n        subComponent = {\n            "order": "random",\n            "numSamples": 1,\n            "components": []\n        }\n        for color in colorList:\n            subComponent["components"].append("trial_" + str(speed) + \'_\' + color)\n        components.append(subComponent)\n    \n    sequence["components"] = components\n    return sequence\n\n\nseq = createOrder()\n'})})}),(0,a.jsx)(l.A,{value:"node",label:"Node.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'function createOrder() {\n  const components = ["introduction"];\n  const sequence = {\n    order: "fixed",\n  };\n\n  speedList.forEach((speed) => {\n    const subComponent = {\n      order: "random",\n      numSamples: 1,\n      components: [],\n    };\n    colorList.forEach((color) => {\n      subComponent.components.push(`trial_${speed}_${color}`);\n    });\n    components.push(subComponent);\n  });\n\n  sequence.components = components;\n  return sequence;\n}\n\nconst seq = createOrder();\n\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"You can check the complete code and output at CodeSandbox using the link below:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/festive-vaughan-ggl46v",children:"Python"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/tg3st5",children:"Node"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var t=r(96540);const a={},o=t.createContext(a);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);