"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[49326],{82223:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var r=t(34164);const a={tabItem:"tabItem_Ymn6"};var i=t(74848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,s),hidden:t,children:n})}},72206:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(96540),a=t(34164),i=t(80052),s=t(56347),o=t(35793),l=t(99025),c=t(4430),u=t(44148);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const a=(0,s.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(a.location.search);n.set(i,e),a.replace({...a.location,search:n.toString()})}),[i,a])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,i=h(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[c,d]=f({queryString:t,groupId:a}),[m,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,i]=(0,u.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:a}),x=(()=>{const e=c??m;return p({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{x&&l(x)}),[x]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),g(e)}),[d,g,i]),tabValues:i}}var g=t(75251);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(74848);function b(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),u=e=>{const n=e.currentTarget,t=l.indexOf(n),a=o[t].value;a!==r&&(c(n),s(a))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{l.push(e)},onKeyDown:d,onClick:u,...i,className:(0,a.A)("tabs__item",x.tabItem,i?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:i}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function j(e){const n=m(e);return(0,y.jsxs)("div",{className:(0,a.A)("tabs-container",x.tabList),children:[(0,y.jsx)(b,{...n,...e}),(0,y.jsx)(v,{...n,...e})]})}function w(e){const n=(0,g.A)();return(0,y.jsx)(j,{...e,children:d(e.children)},String(n))}},96202:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"designing-studies/config-generation/fixed-order","title":"Example 1: Fixed Order","description":"The example we provide below is very similar to our click accuracy test that you can view in our demo page.","source":"@site/versioned_docs/version-v2.0.0-rc5/designing-studies/config-generation/fixed-order.md","sourceDirName":"designing-studies/config-generation","slug":"/designing-studies/config-generation/fixed-order","permalink":"/docs/v2.0.0-rc5/designing-studies/config-generation/fixed-order","draft":false,"unlisted":false,"tags":[],"version":"v2.0.0-rc5","frontMatter":{},"sidebar":"docs","previous":{"title":"Config File Generation","permalink":"/docs/v2.0.0-rc5/designing-studies/config-generation/"},"next":{"title":"Example 2: Random Sample","permalink":"/docs/v2.0.0-rc5/designing-studies/config-generation/random-sample"}}');var a=t(74848),i=t(28453),s=t(72206),o=t(82223);const l={},c="Example 1: Fixed Order",u={},d=[];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"example-1-fixed-order",children:"Example 1: Fixed Order"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["The example we provide below is very similar to our ",(0,a.jsx)(n.a,{href:"https://github.com/revisit-studies/study/tree/main/public/demo-click-accuracy-test",children:"click accuracy test"})," that you can view in our demo page."]})}),"\n",(0,a.jsxs)(n.p,{children:["Suppose we have a base component which allows the parameters ",(0,a.jsx)(n.code,{children:"speed"})," and ",(0,a.jsx)(n.code,{children:"taskid"})," and metadata fields ",(0,a.jsx)(n.code,{children:"nr-dots"})," and ",(0,a.jsx)(n.code,{children:"speed"}),". Now suppose we want to create 100 copies of this base component with varying speeds. In this example, we'll walk through the generation of these base components by iterating through a loop 100 times."]}),"\n",(0,a.jsx)(n.p,{children:"We'll start by creating a function that, when called, will return an Object containing the base components with variable speed."}),"\n","\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(o.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def createTrials():\n    allTrials = {}\n    for i in range(100):\n        allTrials["trial-" + str(i)] = {\n            "baseComponent": "trial",\n            "meta": {\n                "nr-dots": 1,\n                "speed": 300 + i\n            },\n            "parameters": {\n                "speed": 300 + i,\n                "taskid": "accuracy"\n            }\n        }\n    return allTrials\n'})})}),(0,a.jsx)(o.A,{value:"node",label:"Node.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'function createTrials() {\n  const allTrials = {};\n  for (let i = 0; i < 100; i++) {\n    allTrials[`trial-${i}`] = {\n      baseComponent: "trial",\n      meta: {\n        "nr-dots": 1,\n        speed: 300 + i,\n      },\n      parameters: {\n        speed: 300 + i,\n        taskid: "accuracy",\n      },\n    };\n  }\n  return allTrials;\n}\n'})})})]}),"\n",(0,a.jsxs)(n.p,{children:["Now that we have a function to create the components, we'll create a function that generates our ",(0,a.jsx)(n.a,{href:"../../study-sequences",children:"Sequence"}),". In this example, we are doing a fixed order sequence so we only need to generate a sequence object whose ",(0,a.jsx)(n.code,{children:"components"})," key is the list of the trial names."]}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(o.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def createFixedOrder(allTrials):\n    trial_keys = [key for key in allTrials]\n\n    # Create the sequence structure\n    sequence = {\n        "sequence": {\n            "order": "fixed",\n            "components": [\n                "introduction"\n            ] + trial_keys  # Append the trial keys\n        }\n    }\n    return sequence\n'})})}),(0,a.jsx)(o.A,{value:"node",label:"Node.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'function createFixedOrder(allTrials) {\n  const trialKeys = Object.keys(allTrials);\n\n  const sequence = {\n    sequence: {\n      order: "fixed",\n      components: ["introduction", ...trialKeys],\n    },\n  };\n  return sequence;\n}\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"Lastly, we'll have a section of our code to write the final output to a JSON file."}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(o.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import json\n\nwith open('config.json', 'w') as outfile:\n    json.dump(allTrials, outfile, indent=4)\n"})})}),(0,a.jsx)(o.A,{value:"node",label:"Node.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const fs = require("fs");\nconst jsonData = JSON.stringify(seq, null, 2);\n\nfs.writeFile("config.json", jsonData, (err) => {\n  if (err) {\n    console.error("Error writing to file", err);\n  }\n});\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"Combining everything together, we get the following:"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(o.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'\ninitialConfig = {\n    "$schema": "https://raw.githubusercontent.com/revisit-studies/study/v1.0.2/src/parser/StudyConfigSchema.json",\n    "studyMetadata": {\n      "title": "Dynamic React Stimuli and Provenance Tracking",\n      "version": "pilot",\n      "authors": [\n        "The reVISit Team"\n      ],\n      "date": "2023-06-15",\n      "description": "A demo of using dynamic React stimuli and using provenance tracking with the trrack library for data collection.",\n      "organizations": [\n        "University of Utah",\n        "WPI",\n        "University of Toronto"\n      ]\n    },\n    "uiConfig": {\n      "contactEmail": "contact@revisit.dev",\n      "helpTextPath": "demo-click-accuracy-test/assets/help.md",\n      "logoPath": "revisitAssets/revisitLogoSquare.svg",\n      "withProgressBar": True,\n      "autoDownloadStudy": False,\n      "sidebar": True\n    },\n    "baseComponents": {\n      "trial": {\n        "description": "try to click on the center of the moving dot",\n        "instruction": "Click on the moving dot",\n        "type": "react-component",\n        "path": "demo-click-accuracy-test/assets/ClickAccuracyTest.tsx",\n        "nextButtonLocation": "sidebar",\n        "response": [\n          {\n            "id": "accuracy",\n            "prompt": "Your click distance to circle center",\n            "required": True,\n            "location": "sidebar",\n            "type": "iframe"\n          }\n        ]\n      },\n\n    },\n    "components": {},\n    "sequence": {}\n  }\n\n\ndef createTrials():\n    allTrials = {}\n    for i in range(100):\n        allTrials["trial-" + str(i)] = {\n            "baseComponent": "trial",\n            "meta": {\n                "nr-dots": 1,\n                "speed": 300 + i\n            },\n            "parameters": {\n                "speed": 300 + i,\n                "taskid": "accuracy"\n            }\n        }\n    return allTrials\n\n\n# Create fixed order\ndef createFixedOrder(allTrials):\n    trial_keys = [key for key in allTrials]\n\n    # Create the sequence structure\n    sequence = {\n        "sequence": {\n            "order": "fixed",\n            "components": [\n                "introduction"\n            ] + trial_keys  # Append the trial keys\n        }\n    }\n    return sequence\n\n\nallTrials = createTrials()\nseq = createFixedOrder(allTrials)\n\n# Set Components\ninitialConfig[\'components\'] = allTrials\n\n# Set Sequence\ninitialConfig[\'sequence\'] = seq\n\nimport json\n\nwith open(\'config.json\', \'w\') as outfile:\n    json.dump(initialConfig, outfile, indent=4)\n'})})}),(0,a.jsx)(o.A,{value:"node",label:"Node.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const initialConfig = {\n  $schema:\n    "https://raw.githubusercontent.com/revisit-studies/study/v1.0.2/src/parser/StudyConfigSchema.json",\n  studyMetadata: {\n    title: "Dynamic React Stimuli and Provenance Tracking",\n    version: "pilot",\n    authors: ["The reVISit Team"],\n    date: "2023-06-15",\n    description:\n      "A demo of using dynamic React stimuli and using provenance tracking with the trrack library for data collection.",\n    organizations: ["University of Utah", "WPI", "University of Toronto"],\n  },\n  uiConfig: {\n    contactEmail: "contact@revisit.dev",\n    helpTextPath: "demo-click-accuracy-test/assets/help.md",\n    logoPath: "revisitAssets/revisitLogoSquare.svg",\n    withProgressBar: true,\n    autoDownloadStudy: false,\n    sidebar: true,\n  },\n  baseComponents: {\n    trial: {\n      description: "try to click on the center of the moving dot",\n      instruction: "Click on the moving dot",\n      type: "react-component",\n      path: "demo-click-accuracy-test/assets/ClickAccuracyTest.tsx",\n      nextButtonLocation: "sidebar",\n      response: [\n        {\n          id: "accuracy",\n          prompt: "Your click distance to circle center",\n          required: true,\n          location: "sidebar",\n          type: "iframe",\n        },\n      ],\n    },\n  },\n  components: {},\n  sequence: {},\n};\n\n// Create trials\nfunction createTrials() {\n  const allTrials = {};\n  for (let i = 0; i < 100; i++) {\n    allTrials[`trial-${i}`] = {\n      baseComponent: "trial",\n      meta: {\n        "nr-dots": 1,\n        speed: 300 + i,\n      },\n      parameters: {\n        speed: 300 + i,\n        taskid: "accuracy",\n      },\n    };\n  }\n  return allTrials;\n}\n\n// Create fixed order\nfunction createFixedOrder(allTrials) {\n  const trialKeys = Object.keys(allTrials);\n\n  const sequence = {\n    sequence: {\n      order: "fixed",\n      components: ["introduction", ...trialKeys],\n    },\n  };\n  return sequence;\n}\n\n// Call \'createTrials\' function\nconst allTrials = createTrials();\n// Pass in the trials to the \'createFixedOrder\' function to get full sequence\nconst seq = createFixedOrder(allTrials);\n\n// Set Components\ninitialConfig.components = allTrials;\n\n// Set Sequence\ninitialConfig.sequence = seq;\n\nconst fs = require("fs");\nconst seqData = JSON.stringify(seq, null, 2);\nconst trialData = JSON.stringify(allTrials, null, 2);\nconst configData = JSON.stringify(initialConfig, null, 2);\n// Output to JSON file\nfs.writeFile("out/config-click-accuracy.json", configData, (err) => {\n  if (err) {\n    console.error("Error writing to file", err);\n  }\n});\n\nfs.writeFile("out/trial.json", trialData, (err) => {\n  if (err) {\n    console.error("Error writing to file", err);\n  }\n});\n\nfs.writeFile("out/seq-fixed-order.json", seqData, (err) => {\n  if (err) {\n    console.error("Error writing to file", err);\n  }\n});\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"You can check the code and output at CodeSandbox using the link below:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/config-gen-demo1-cgzlg5",children:"Python"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/cpsmvd",children:"Node"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(96540);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);