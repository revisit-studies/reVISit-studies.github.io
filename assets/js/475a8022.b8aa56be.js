"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[2126],{8968:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"v1.0.0-beta6","label":"v1.0.0-beta6","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-v1.0.0-beta6","isLast":false,"docsSidebars":{"docs":[{"type":"link","label":"Introduction","href":"/docs/v1.0.0-beta6/introduction","docId":"introduction","unlisted":false},{"type":"category","label":"Getting Started","collapsed":false,"items":[{"type":"link","label":"How Does It Work?","href":"/docs/v1.0.0-beta6/getting-started/how-does-it-work","docId":"getting-started/how-does-it-work","unlisted":false},{"type":"link","label":"Installation","href":"/docs/v1.0.0-beta6/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"Setting Up Your First Study","href":"/docs/v1.0.0-beta6/getting-started/tutorial-questionnaire","docId":"getting-started/tutorial-questionnaire","unlisted":false}],"collapsible":true,"href":"/docs/v1.0.0-beta6/getting-started/"},{"type":"category","label":"Tutorials","collapsed":false,"items":[{"type":"link","label":"Connecting to Firebase","href":"/docs/v1.0.0-beta6/tutorials/firebase-setup","docId":"tutorials/firebase-setup","unlisted":false},{"type":"link","label":"Deploying To a Static Website","href":"/docs/v1.0.0-beta6/tutorials/deploying-to-static-website","docId":"tutorials/deploying-to-static-website","unlisted":false},{"type":"link","label":"dissemination-of-study","href":"/docs/v1.0.0-beta6/tutorials/dissemination-of-study","docId":"tutorials/dissemination-of-study","unlisted":false}],"collapsible":true,"href":"/docs/v1.0.0-beta6/category/tutorials"},{"type":"category","label":"Authentication and Authorization","items":[{"type":"link","label":"Setting Up Authentication","href":"/docs/v1.0.0-beta6/authentication-authorization/adding-removing-ui","docId":"authentication-authorization/adding-removing-ui","unlisted":false},{"type":"link","label":"Firebase User Management","href":"/docs/v1.0.0-beta6/authentication-authorization/firebase-user-management","docId":"authentication-authorization/firebase-user-management","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/v1.0.0-beta6/authentication-authorization/"},{"type":"category","label":"Analysis Dashboard","items":[{"type":"link","label":"Downloading User Data","href":"/docs/v1.0.0-beta6/analysis-dashboard/downloading-user-data","docId":"analysis-dashboard/downloading-user-data","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/v1.0.0-beta6/analysis-dashboard/"},{"type":"link","label":"FAQ","href":"/docs/v1.0.0-beta6/faq","docId":"faq","unlisted":false},{"type":"category","label":"TypeDoc","items":[{"type":"category","label":"Modules","items":[{"type":"link","label":"Interface: Answer","href":"/docs/v1.0.0-beta6/typedoc/interfaces/Answer","docId":"typedoc/interfaces/Answer","unlisted":false},{"type":"link","label":"Interface: BaseIndividualComponent","href":"/docs/v1.0.0-beta6/typedoc/interfaces/BaseIndividualComponent","docId":"typedoc/interfaces/BaseIndividualComponent","unlisted":false},{"type":"link","label":"Interface: BaseResponse","href":"/docs/v1.0.0-beta6/typedoc/interfaces/BaseResponse","docId":"typedoc/interfaces/BaseResponse","unlisted":false},{"type":"link","label":"Interface: CheckboxResponse","href":"/docs/v1.0.0-beta6/typedoc/interfaces/CheckboxResponse","docId":"typedoc/interfaces/CheckboxResponse","unlisted":false},{"type":"link","label":"Interface: ComponentBlock","href":"/docs/v1.0.0-beta6/typedoc/interfaces/ComponentBlock","docId":"typedoc/interfaces/ComponentBlock","unlisted":false},{"type":"link","label":"Interface: ComponentBlockCondition","href":"/docs/v1.0.0-beta6/typedoc/interfaces/ComponentBlockCondition","docId":"typedoc/interfaces/ComponentBlockCondition","unlisted":false},{"type":"link","label":"Interface: DropdownResponse","href":"/docs/v1.0.0-beta6/typedoc/interfaces/DropdownResponse","docId":"typedoc/interfaces/DropdownResponse","unlisted":false},{"type":"link","label":"Interface: GlobalConfig","href":"/docs/v1.0.0-beta6/typedoc/interfaces/GlobalConfig","docId":"typedoc/interfaces/GlobalConfig","unlisted":false},{"type":"link","label":"Interface: IFrameResponse","href":"/docs/v1.0.0-beta6/typedoc/interfaces/IFrameResponse","docId":"typedoc/interfaces/IFrameResponse","unlisted":false},{"type":"link","label":"Interface: ImageComponent","href":"/docs/v1.0.0-beta6/typedoc/interfaces/ImageComponent","docId":"typedoc/interfaces/ImageComponent","unlisted":false},{"type":"link","label":"Interface: IndividualComponentAllResponsesCondition","href":"/docs/v1.0.0-beta6/typedoc/interfaces/IndividualComponentAllResponsesCondition","docId":"typedoc/interfaces/IndividualComponentAllResponsesCondition","unlisted":false},{"type":"link","label":"Interface: IndividualComponentSingleResponseCondition","href":"/docs/v1.0.0-beta6/typedoc/interfaces/IndividualComponentSingleResponseCondition","docId":"typedoc/interfaces/IndividualComponentSingleResponseCondition","unlisted":false},{"type":"link","label":"Interface: LikertResponse","href":"/docs/v1.0.0-beta6/typedoc/interfaces/LikertResponse","docId":"typedoc/interfaces/LikertResponse","unlisted":false},{"type":"link","label":"Interface: LongTextResponse","href":"/docs/v1.0.0-beta6/typedoc/interfaces/LongTextResponse","docId":"typedoc/interfaces/LongTextResponse","unlisted":false},{"type":"link","label":"Interface: MarkdownComponent","href":"/docs/v1.0.0-beta6/typedoc/interfaces/MarkdownComponent","docId":"typedoc/interfaces/MarkdownComponent","unlisted":false},{"type":"link","label":"Interface: NumericalResponse","href":"/docs/v1.0.0-beta6/typedoc/interfaces/NumericalResponse","docId":"typedoc/interfaces/NumericalResponse","unlisted":false},{"type":"link","label":"Interface: Option","href":"/docs/v1.0.0-beta6/typedoc/interfaces/Option","docId":"typedoc/interfaces/Option","unlisted":false},{"type":"link","label":"Interface: ParticipantData","href":"/docs/v1.0.0-beta6/typedoc/interfaces/ParticipantData","docId":"typedoc/interfaces/ParticipantData","unlisted":false},{"type":"link","label":"Interface: QuestionnaireComponent","href":"/docs/v1.0.0-beta6/typedoc/interfaces/QuestionnaireComponent","docId":"typedoc/interfaces/QuestionnaireComponent","unlisted":false},{"type":"link","label":"Interface: RadioResponse","href":"/docs/v1.0.0-beta6/typedoc/interfaces/RadioResponse","docId":"typedoc/interfaces/RadioResponse","unlisted":false},{"type":"link","label":"Interface: ReactComponent","href":"/docs/v1.0.0-beta6/typedoc/interfaces/ReactComponent","docId":"typedoc/interfaces/ReactComponent","unlisted":false},{"type":"link","label":"Interface: RepeatedComponentBlockCondition","href":"/docs/v1.0.0-beta6/typedoc/interfaces/RepeatedComponentBlockCondition","docId":"typedoc/interfaces/RepeatedComponentBlockCondition","unlisted":false},{"type":"link","label":"Interface: Sequence","href":"/docs/v1.0.0-beta6/typedoc/interfaces/Sequence","docId":"typedoc/interfaces/Sequence","unlisted":false},{"type":"link","label":"Interface: ShortTextResponse","href":"/docs/v1.0.0-beta6/typedoc/interfaces/ShortTextResponse","docId":"typedoc/interfaces/ShortTextResponse","unlisted":false},{"type":"link","label":"Interface: SliderResponse","href":"/docs/v1.0.0-beta6/typedoc/interfaces/SliderResponse","docId":"typedoc/interfaces/SliderResponse","unlisted":false},{"type":"link","label":"Interface: StoredAnswer","href":"/docs/v1.0.0-beta6/typedoc/interfaces/StoredAnswer","docId":"typedoc/interfaces/StoredAnswer","unlisted":false},{"type":"link","label":"Interface: StudyConfig","href":"/docs/v1.0.0-beta6/typedoc/interfaces/StudyConfig","docId":"typedoc/interfaces/StudyConfig","unlisted":false},{"type":"link","label":"Interface: StudyMetadata","href":"/docs/v1.0.0-beta6/typedoc/interfaces/StudyMetadata","docId":"typedoc/interfaces/StudyMetadata","unlisted":false},{"type":"link","label":"Interface: UIConfig","href":"/docs/v1.0.0-beta6/typedoc/interfaces/UIConfig","docId":"typedoc/interfaces/UIConfig","unlisted":false},{"type":"link","label":"Interface: WebsiteComponent","href":"/docs/v1.0.0-beta6/typedoc/interfaces/WebsiteComponent","docId":"typedoc/interfaces/WebsiteComponent","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/v1.0.0-beta6/typedoc/modules"}],"collapsed":true,"collapsible":true,"href":"/docs/v1.0.0-beta6/typedoc/"}]},"docs":{"analysis-dashboard/downloading-user-data":{"id":"analysis-dashboard/downloading-user-data","title":"Downloading User Data","description":"reVISit allows you to download participant\'s data using an admin interface -- there is no need to interact with Firebase directly. To start, navigate to a study that you wish to download participants data from. Then, add ?admin=t to the url like in the image below.","sidebar":"docs"},"analysis-dashboard/index":{"id":"analysis-dashboard/index","title":"index","description":"\x3c!--","sidebar":"docs"},"authentication-authorization/adding-removing-ui":{"id":"authentication-authorization/adding-removing-ui","title":"Setting Up Authentication","description":"Enabling Authentication","sidebar":"docs"},"authentication-authorization/firebase-user-management":{"id":"authentication-authorization/firebase-user-management","title":"Firebase User Management","description":"In general, we do not advise editing the user management data directly in the Firestore Database. This should only be used in cases where the security of the application has been compromised and there is no way to edit the user access within the reVISit application. Please see here for editing users within the reVISit UI","sidebar":"docs"},"authentication-authorization/index":{"id":"authentication-authorization/index","title":"User Management In reVISit","description":"To use the user-management system that is built into reVISit, you must have a Firebase application set up. Please see here for how to set up a Firebase application.","sidebar":"docs"},"faq":{"id":"faq","title":"FAQ","description":"Below we have a list of some frequently asked questions. We try to make sure that this page is updated as frequently as possible. If you have a question that is not answered by this page or the rest of the documentation, you can join the reVISit Slack group. Otherwise, you can contact us at ``.","sidebar":"docs"},"getting-started/how-does-it-work":{"id":"getting-started/how-does-it-work","title":"How Does It Work?","description":"To create a study with reVISit, you have to create components that contain the content of your study, and you have to create the study configuration (the reVISit Spec) that controls when and how these components are shown to participants. Here, we will introduce these at a high level and link to complete documentation where appropriate.","sidebar":"docs"},"getting-started/index":{"id":"getting-started/index","title":"Getting Started","description":"If you\'d like to get started right out of the gates with a small tutorial, you can begin in the installation section and then move on to our simple questionnaire tutorial. If you\'d rather read more about the inner workings of reVISit -- specifically how the studies in reVISit are created, designed, and maintained -- you can visit our \'How Does It Work\' of the reVISit spec here.","sidebar":"docs"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"The reVISit project is open-source \u2013 meaning anyone can see the entire codebase. Most of the work that is done to create a new study is done by making changes to this codebase. Because of this, we will start by \u201cforking the repository\u201d.","sidebar":"docs"},"getting-started/tutorial-questionnaire":{"id":"getting-started/tutorial-questionnaire","title":"Setting Up Your First Study","description":"Basic Questionnaire Study","sidebar":"docs"},"introduction":{"id":"introduction","title":"Introduction","description":"reVISit lets you create interactive, web-based study setups using a JSON domain-specific language (DSL), called reVISit.spec, and a set of stimuli specified in the DSL. Once you have created a spec and the stimuli, you can build your study and deploy it to the web. You can use stimuli that are images, (interactive) html pages, or react components.","sidebar":"docs"},"tutorials/deploying-to-static-website":{"id":"tutorials/deploying-to-static-website","title":"Deploying To a Static Website","description":"Deploying your study should be relatively simple. We include a GitHub action that will build your study and deploy it to GitHub pages. The only item that the user must adjust is in the .env file in the root of the repository. At the top of this file, you should see VITEBASEPATH=\\"/study/\\". Change \\"/study/\\" to \\"//\\".","sidebar":"docs"},"tutorials/dissemination-of-study":{"id":"tutorials/dissemination-of-study","title":"dissemination-of-study","description":"\x3c!--","sidebar":"docs"},"tutorials/firebase-setup":{"id":"tutorials/firebase-setup","title":"Connecting to Firebase","description":"reVISit is inherently a serverless program. Because of this, we set up a storage engine in order to store the data that is gathered from users as they move through the study. While you can test the program locally without any storage, you will need to set up some sort of storage in order to save study participant data. Our intention is that those who create the study have full control over the data that is generated by participants -- no data is ever linked back to the reVISit repository or those who have contributed to its creation. See the Deployment section for more information about deploying your study to GitHub.io once the connection to Firebase has been set up.","sidebar":"docs"},"typedoc/index":{"id":"typedoc/index","title":"TypeDoc","description":"In this section, you can find detailed documentation for all of the interfaces and types used in the reVISit application. This will help you understand the ins-and-outs of each of the major components of a reVISit study. Before delving into this technical documentation, we suggest that you already have reVISit installed, working locally, and that you have already read our detailed information about the reVISit study configurations in the \'How Does It Work?\' section.","sidebar":"docs"},"typedoc/interfaces/Answer":{"id":"typedoc/interfaces/Answer","title":"Interface: Answer","description":"The Answer interface is used to define the properties of an answer. Answers are used to define the correct answer for a task. These are generally used in training tasks or if skip logic is required based on the answer.","sidebar":"docs"},"typedoc/interfaces/BaseIndividualComponent":{"id":"typedoc/interfaces/BaseIndividualComponent","title":"Interface: BaseIndividualComponent","description":"The BaseIndividualComponent interface is used to define the required fields for all components.","sidebar":"docs"},"typedoc/interfaces/BaseResponse":{"id":"typedoc/interfaces/BaseResponse","title":"Interface: BaseResponse","description":"The BaseResponse interface is used to define the required fields for all responses.","sidebar":"docs"},"typedoc/interfaces/CheckboxResponse":{"id":"typedoc/interfaces/CheckboxResponse","title":"Interface: CheckboxResponse","description":"The CheckboxResponse interface is used to define the properties of a checkbox response.","sidebar":"docs"},"typedoc/interfaces/ComponentBlock":{"id":"typedoc/interfaces/ComponentBlock","title":"Interface: ComponentBlock","description":"The ComponentBlock interface is used to define order properties within the sequence. This is used to define the order of components in a study and the skip logic. It supports random assignment of trials using a pure random assignment and a latin square.","sidebar":"docs"},"typedoc/interfaces/ComponentBlockCondition":{"id":"typedoc/interfaces/ComponentBlockCondition","title":"Interface: ComponentBlockCondition","description":"The ComponentBlockCondition interface is used to define a SkipCondition based on the number of correct or incorrect components in a block. All answers on all components in the block are checked.","sidebar":"docs"},"typedoc/interfaces/DropdownResponse":{"id":"typedoc/interfaces/DropdownResponse","title":"Interface: DropdownResponse","description":"The DropdownResponse interface is used to define the properties of a dropdown response.","sidebar":"docs"},"typedoc/interfaces/GlobalConfig":{"id":"typedoc/interfaces/GlobalConfig","title":"Interface: GlobalConfig","description":"The GlobalConfig is used to generate the list of available studies in the UI.","sidebar":"docs"},"typedoc/interfaces/IFrameResponse":{"id":"typedoc/interfaces/IFrameResponse","title":"Interface: IFrameResponse","description":"The IFrameResponse interface is used to define the properties of an iframe response.","sidebar":"docs"},"typedoc/interfaces/ImageComponent":{"id":"typedoc/interfaces/ImageComponent","title":"Interface: ImageComponent","description":"The ImageComponent interface is used to define the properties of an image component. This component is used to render an image with optional styling.","sidebar":"docs"},"typedoc/interfaces/IndividualComponentAllResponsesCondition":{"id":"typedoc/interfaces/IndividualComponentAllResponsesCondition","title":"Interface: IndividualComponentAllResponsesCondition","description":"The IndividualComponentAllResponsesCondition interface is used to define a SkipCondition based on all answers to a specific component. If the component is repeated within the block, this condition will only check the first instance of the component once the order is flattened. If you need to check all instances of a repeated component, you should use the RepeatedComponentBlockCondition.","sidebar":"docs"},"typedoc/interfaces/IndividualComponentSingleResponseCondition":{"id":"typedoc/interfaces/IndividualComponentSingleResponseCondition","title":"Interface: IndividualComponentSingleResponseCondition","description":"The IndividualComponentSingleResponseCondition interface is used to define a SkipCondition based on a single answer to a specific component. If the component is repeated within the block, this condition will only check the first instance of the component once the order is flattened.","sidebar":"docs"},"typedoc/interfaces/LikertResponse":{"id":"typedoc/interfaces/LikertResponse","title":"Interface: LikertResponse","description":"The LikertResponse interface is used to define the properties of a likert response.","sidebar":"docs"},"typedoc/interfaces/LongTextResponse":{"id":"typedoc/interfaces/LongTextResponse","title":"Interface: LongTextResponse","description":"The LongTextResponse interface is used to define the properties of a long text response.","sidebar":"docs"},"typedoc/interfaces/MarkdownComponent":{"id":"typedoc/interfaces/MarkdownComponent","title":"Interface: MarkdownComponent","description":"The MarkdownComponent interface is used to define the properties of a markdown component. The components can be used to render many different things, such as consent forms, instructions, and debriefs. Additionally, you can use the markdown component to render images, videos, and other media, with supporting text.","sidebar":"docs"},"typedoc/interfaces/NumericalResponse":{"id":"typedoc/interfaces/NumericalResponse","title":"Interface: NumericalResponse","description":"The NumericalResponse interface is used to define the properties of a numerical response.","sidebar":"docs"},"typedoc/interfaces/Option":{"id":"typedoc/interfaces/Option","title":"Interface: Option","description":"The Option interface is used to define the options for a dropdown, slider, radio, or checkbox response.","sidebar":"docs"},"typedoc/interfaces/ParticipantData":{"id":"typedoc/interfaces/ParticipantData","title":"Interface: ParticipantData","description":"The ParticipantData is a JSON object that contains all of the data for all of the participants in your study. It is structured as a list. Each element refers to a participants data or a configuration. While in many cases there is only one configuration per study, the study creator is allowed to change the configuration file after the study has already been completed by other participants. The data for each participant will have a \\"participantConfigHash\\" which refers to a particular configuration which is also in this list.","sidebar":"docs"},"typedoc/interfaces/QuestionnaireComponent":{"id":"typedoc/interfaces/QuestionnaireComponent","title":"Interface: QuestionnaireComponent","description":"The QuestionnaireComponent interface is used to define the properties of a questionnaire component. A QuestionnaireComponent is used to render questions with different response types. The response types are also defined with these documentation. The main use case of this component type is to ask participants questions, without using markdown, websites, images, etc.","sidebar":"docs"},"typedoc/interfaces/RadioResponse":{"id":"typedoc/interfaces/RadioResponse","title":"Interface: RadioResponse","description":"The RadioResponse interface is used to define the properties of a radio response.","sidebar":"docs"},"typedoc/interfaces/ReactComponent":{"id":"typedoc/interfaces/ReactComponent","title":"Interface: ReactComponent","description":"The ReactComponent interface is used to define the properties of a react component. This component is used to render react code with certain parameters. These parameters can be used within your react code to render different things.","sidebar":"docs"},"typedoc/interfaces/RepeatedComponentBlockCondition":{"id":"typedoc/interfaces/RepeatedComponentBlockCondition","title":"Interface: RepeatedComponentBlockCondition","description":"The RepeatedComponentBlockCondition interface is used to define a SkipCondition based on the number of correct or incorrect repeated components. You might use this if you need to check if an attention check was failed multiple times.","sidebar":"docs"},"typedoc/interfaces/Sequence":{"id":"typedoc/interfaces/Sequence","title":"Interface: Sequence","description":"Table of contents","sidebar":"docs"},"typedoc/interfaces/ShortTextResponse":{"id":"typedoc/interfaces/ShortTextResponse","title":"Interface: ShortTextResponse","description":"The ShortTextResponse interface is used to define the properties of a short text response.","sidebar":"docs"},"typedoc/interfaces/SliderResponse":{"id":"typedoc/interfaces/SliderResponse","title":"Interface: SliderResponse","description":"The SliderResponse interface is used to define the properties of a slider response.","sidebar":"docs"},"typedoc/interfaces/StoredAnswer":{"id":"typedoc/interfaces/StoredAnswer","title":"Interface: StoredAnswer","description":"The StoredAnswer object is a data structure describing the participants interaction with an individual component. It is the data structure used as values of the answers object of ParticipantData. The general structure for this is below:","sidebar":"docs"},"typedoc/interfaces/StudyConfig":{"id":"typedoc/interfaces/StudyConfig","title":"Interface: StudyConfig","description":"The StudyConfig interface is used to define the properties of a study configuration. This is a JSON object with four main components: the StudyMetadata, the UIConfig, the Components, and the Sequence. Below is the general template that should be followed when constructing a Study configuration file.","sidebar":"docs"},"typedoc/interfaces/StudyMetadata":{"id":"typedoc/interfaces/StudyMetadata","title":"Interface: StudyMetadata","description":"The StudyMetadata is used to describe certain properties of a study.","sidebar":"docs"},"typedoc/interfaces/UIConfig":{"id":"typedoc/interfaces/UIConfig","title":"Interface: UIConfig","description":"The UIConfig is used to configure the UI of the app.","sidebar":"docs"},"typedoc/interfaces/WebsiteComponent":{"id":"typedoc/interfaces/WebsiteComponent","title":"Interface: WebsiteComponent","description":"The WebsiteComponent interface is used to define the properties of a website component. A WebsiteComponent is used to render an iframe with a website inside of it. This can be used to display an external website or an html file that is located in the public folder.","sidebar":"docs"},"typedoc/modules":{"id":"typedoc/modules","title":"Modules","description":"Table of contents","sidebar":"docs"}}}}')}}]);