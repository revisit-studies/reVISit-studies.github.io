"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[8231],{6880:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"designing-studies/forms","title":"Designing Forms","description":"Form elements are essential for most studies to capture user responses. reVISit provides rich form elements, such as slides, check-boxes, text fields, etc, so that you can efficiently design your forms.","source":"@site/versioned_docs/version-v2.0.0-rc6/designing-studies/forms.md","sourceDirName":"designing-studies","slug":"/designing-studies/forms","permalink":"/docs/v2.0.0-rc6/designing-studies/forms","draft":false,"unlisted":false,"tags":[],"version":"v2.0.0-rc6","frontMatter":{},"sidebar":"docs","previous":{"title":"Designing Studies","permalink":"/docs/v2.0.0-rc6/designing-studies/"},"next":{"title":"Designing an HTML Stimulus","permalink":"/docs/v2.0.0-rc6/designing-studies/html-stimulus"}}');var t=s(74848),o=s(28453);const r={},d="Designing Forms",a={},l=[{value:"Principles",id:"principles",level:2},{value:"Notable Features",id:"notable-features",level:2},{value:"Prompts and Descriptions",id:"prompts-and-descriptions",level:3},{value:"Required Fields",id:"required-fields",level:3},{value:"\u201cDon&#39;t Know\u201d Option",id:"dont-know-option",level:3},{value:"Dividers",id:"dividers",level:3},{value:"Radio and Checkbox Features",id:"radio-and-checkbox-features",level:3},{value:"Vertical and Horizontal Layouts",id:"vertical-and-horizontal-layouts",level:4},{value:"\u201cOther\u201d Option",id:"other-option",level:4}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"designing-forms",children:"Designing Forms"})}),"\n",(0,t.jsx)(n.p,{children:"Form elements are essential for most studies to capture user responses. reVISit provides rich form elements, such as slides, check-boxes, text fields, etc, so that you can efficiently design your forms."}),"\n",(0,t.jsx)(n.p,{children:"This tutorial does not give a comprehensive introduction into all form elements. For this, refer to the demo and the reference, shown below:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://revisit.dev/study/demo-survey/",children:"Form Element Demo"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/revisit-studies/study/blob/main/public/demo-survey/config.json",children:"Source for Form Element Demo"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../../typedoc/#form-elements",children:"Overview of Form Elements"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Instead, we introduce some high-level principles that apply to all form elements."}),"\n",(0,t.jsx)(n.h2,{id:"principles",children:"Principles"}),"\n",(0,t.jsxs)(n.p,{children:["Form elements are components of type ",(0,t.jsx)(n.code,{children:"questionnaire"}),". Here is a simple example with a drop-down element:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'"components": {\n    "survey": {\n        "type": "questionnaire",\n        "response": [\n        {\n            "id": "q-dropdown",\n            "prompt": "Dropdown example \u2013\xa0which chart do you like best?",\n            "secondaryText": "You can specify secondary text to clarify your question.",\n            "location": "aboveStimulus",\n            "type": "dropdown",\n            "placeholder": "Enter your preference",\n            "options": [\n                "Bar",\n                "Bubble",\n                "Pie",\n                "Stacked Bar"\n            ]\n        }\n        ]\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"This renders like that:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A dropdown box with secondary text",src:s(4665).A+"",width:"1162",height:"558"})}),"\n",(0,t.jsxs)(n.p,{children:["In this example, the drop-down is rendered in the main window, as indicated by the ",(0,t.jsx)(n.code,{children:'"location": "aboveStimulus"'})," line. As documented in the ",(0,t.jsx)(n.a,{href:"../../typedoc/interfaces/BaseResponse/",children:(0,t.jsx)(n.code,{children:"BaseResponse"})}),", the other options are ",(0,t.jsx)(n.code,{children:"sidebar"})," and ",(0,t.jsx)(n.code,{children:"belowStimulus"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Form elements can be placed either in a side-bar, or as the main content of a study page. The side-bar version is useful if you're showing another kind of stimulus in the main part of the window. The main page location is useful for stand-alone survey questions, or if you want to integrate your response with your stimulus."}),"\n",(0,t.jsx)(n.p,{children:"Because form elements are so commonly combined with other stimuli, a standalone questionnaire component as shown above is just a stripped down component with \u201conly\u201d a response."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"You can also add form-based responses to all other stimuli using exactly the same syntax!"})}),"\n",(0,t.jsx)(n.h2,{id:"notable-features",children:"Notable Features"}),"\n",(0,t.jsx)(n.p,{children:"Below we list some notable features that apply to all or most form elements."}),"\n",(0,t.jsx)(n.h3,{id:"prompts-and-descriptions",children:"Prompts and Descriptions"}),"\n",(0,t.jsxs)(n.p,{children:["Each form element requires a ",(0,t.jsx)(n.code,{children:"prompt"})," that introduces the question. You can also provide a more detailed description in ",(0,t.jsx)(n.code,{children:"secondaryText"})," that is shown below the prompt; both are demonstrated in the above example."]}),"\n",(0,t.jsx)(n.h3,{id:"required-fields",children:"Required Fields"}),"\n",(0,t.jsxs)(n.p,{children:["You can make a field required, in which case a red star is rendered (see above) and it is necessary that a response is given before the \u201cNext\u201d button is activated and the participant can proceed. Required is the default, set ",(0,t.jsx)(n.code,{children:'"required": false'})," if an answer is optional."]}),"\n",(0,t.jsx)(n.h3,{id:"dont-know-option",children:"\u201cDon't Know\u201d Option"}),"\n",(0,t.jsxs)(n.p,{children:["You can explicitly allow participants to state that they don't know the response with a dedicated checkbox:\n",(0,t.jsx)(n.img,{alt:"A numerical input example with a don&#39;t know option.",src:s(80895).A+"",width:"1164",height:"282"})]}),"\n",(0,t.jsxs)(n.p,{children:["To achieve that, add the ",(0,t.jsx)(n.code,{children:'"withDontKnow": true'})," option to your form element."]}),"\n",(0,t.jsx)(n.h3,{id:"dividers",children:"Dividers"}),"\n",(0,t.jsxs)(n.p,{children:["You can structure your forms by adding a divider between form elements. To add a divider, add ",(0,t.jsx)(n.code,{children:'"withDivider": true'})," to the question that you want the divider to appear after. In the following figure, there's a divider added between question 3 and 4."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Two questions separated by a divider.",src:s(7399).A+"",width:"1164",height:"426"})}),"\n",(0,t.jsx)(n.h3,{id:"radio-and-checkbox-features",children:"Radio and Checkbox Features"}),"\n",(0,t.jsx)(n.p,{children:"Radio buttons and checkboxes have some shared noteworthy features. Here is an example showing different configurations of radio buttons:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Two radio button questions, one horizontal, one vertical. One of them has an &quot;other&quot; option.",src:s(43085).A+"",width:"1164",height:"548"})}),"\n",(0,t.jsx)(n.h4,{id:"vertical-and-horizontal-layouts",children:"Vertical and Horizontal Layouts"}),"\n",(0,t.jsxs)(n.p,{children:["Radios and check-boxes can be rendered either vertically (the default) or horizontally. The above figure shows radios for both. Set ",(0,t.jsx)(n.code,{children:'"horizontal": true'})," to get the horizontal version."]}),"\n",(0,t.jsx)(n.h4,{id:"other-option",children:"\u201cOther\u201d Option"}),"\n",(0,t.jsxs)(n.p,{children:["You can allow an \u201cother\u201d option for radios and checkboxes, as shown for the first radio group above. To enable that, set ",(0,t.jsx)(n.code,{children:'"withOther": true'}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},7399:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/form-divider-2df2b770000a943637a3ccdaef793214.png"},80895:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/form-dont-know-99ca825a71ba7d5edb006aabbcb5996e.png"},4665:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/form-dropdown-ddd4e194d6c619c668cfaf72c6609327.png"},43085:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/form-radio-aa3e9dbe4f18da3ced464b916fd810b4.png"},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var i=s(96540);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);