"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[43106],{48985:(e,n,t)=>{t.d(n,{A:()=>u});const s={container:"container_xt6w",linkContainer:"linkContainer_RYvw",iconContainer:"iconContainer_M3C8",demosTitle:"demosTitle_CEJp",codesTitle:"codesTitle_Z3_M",referencesTitle:"referencesTitle_uPPp"};var i=t(96540),a=t(40961),r=t(27293),o=t(83914),c=t(37875),l=t(66188),d=t(78478),h=t(74848);function m({demoLinks:e,codeLinks:n,referenceLinks:t}){const[d,m]=(0,i.useState)(null),[u]=(0,i.useState)(()=>document.createElement("div"));return(0,i.useEffect)(()=>{const e=document.querySelector(".theme-doc-toc-desktop");if(e?.parentElement){const n=e.parentElement;n.insertBefore(u,n.firstChild),m(u)}return()=>{u.remove()}},[u]),(e||n||t)&&d?a.createPortal((0,h.jsx)("div",{className:s.container,children:(0,h.jsx)(r.A,{type:"note",title:"Relevant Links",children:(0,h.jsxs)("div",{className:s.linkContainer,children:[e&&e.length>0?(0,h.jsxs)("div",{className:s.demosContainer,children:[(0,h.jsxs)("div",{className:s.iconContainer,children:[(0,h.jsx)(o.g,{icon:l.CQO}),(0,h.jsx)("div",{className:s.demosTitle,children:"Live Demos"})]}),(0,h.jsx)("div",{style:{marginLeft:"23px"},children:e.map(e=>(0,h.jsx)("a",{target:"_blank",href:e.url,children:e.name}))})]}):null,n&&n.length>0?(0,h.jsxs)("div",{className:s.codesContainer,children:[(0,h.jsxs)("div",{className:s.iconContainer,children:[(0,h.jsx)(o.g,{icon:c.Vz1}),(0,h.jsx)("div",{className:s.codesTitle,children:"Demo Codes"})]}),(0,h.jsx)("div",{style:{marginLeft:"23px"},children:n.map(e=>(0,h.jsx)("a",{target:"_blank",href:e.url,children:e.name}))})]}):null,t&&t.length>0?(0,h.jsxs)("div",{className:s.referencesContainer,children:[(0,h.jsxs)("div",{className:s.iconContainer,children:[(0,h.jsx)(o.g,{icon:l.h8M}),(0,h.jsx)("div",{className:s.referencesTitle,children:"References"})]}),(0,h.jsx)("div",{style:{marginLeft:"23px"},children:t.map(e=>(0,h.jsx)("a",{target:"_blank",href:e.url,children:e.name}))})]}):null]})})}),d):null}const u=function({demoLinks:e,codeLinks:n,referenceLinks:t}){return(0,h.jsx)(d.A,{children:()=>(0,h.jsx)(m,{demoLinks:e,codeLinks:n,referenceLinks:t})})}},95025:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"designing-studies/html-stimulus","title":"Designing an HTML Stimulus","description":"<StructuredLinks","source":"@site/versioned_docs/version-v2.1.1/designing-studies/html-stimulus.md","sourceDirName":"designing-studies","slug":"/designing-studies/html-stimulus","permalink":"/docs/v2.1.1/designing-studies/html-stimulus","draft":false,"unlisted":false,"tags":[],"version":"v2.1.1","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"docs","previous":{"title":"Designing Image/Video Stimuli","permalink":"/docs/v2.1.1/designing-studies/image-video-stimulus"},"next":{"title":"Designing a React Stimulus","permalink":"/docs/v2.1.1/designing-studies/react-stimulus"}}');var i=t(74848),a=t(28453),r=t(48985);const o={sidebar_position:3},c="Designing an HTML Stimulus",l={},d=[{value:"HTML Stimuli",id:"html-stimuli",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"designing-an-html-stimulus",children:"Designing an HTML Stimulus"})}),"\n","\n",(0,i.jsx)(r.A,{referenceLinks:[{name:"D3.js",url:"https://d3js.org/"},{name:"Base Components",url:"../../typedoc/type-aliases/BaseComponents/"}]}),"\n",(0,i.jsx)(n.p,{children:"Now, we will take the study we just created and add another component based on a user-created HTML file. This allows for some additional customization of the component."}),"\n",(0,i.jsx)(n.h2,{id:"html-stimuli",children:"HTML Stimuli"}),"\n",(0,i.jsx)(n.p,{children:"The HTML code below uses the extensive D3.js library. It renders a simple, horizontal bar chart. Copy and paste this HTML into a document called \u201cbar-chart.html\u201d in the \u201cbasic-questionnaire-study/assets\u201d directory."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>D3 Nice Axes</title>\n    <script src=\"https://d3js.org/d3.v7.js\"><\/script>\n    \x3c!-- Load revisit-communicate to be able to send data to reVISit --\x3e\n    <script src=\"../../revisitUtilities/revisit-communicate.js\"><\/script>\n  </head>\n\n  <body>\n    <svg></svg>\n  </body>\n\n  <script>\n    // Get data from the config file\n    Revisit.onDataReceive((data) => {\n      const barData = data['barData']\n      const taskID = 'barChart';\n      const loc = 'belowStimulus';\n      height = 400;\n      width = 750;\n      padding = 25;\n      svg = d3.select('svg');\n      svg\n        .attr('width', width + 2 * padding)\n        .attr('height', height + 2 * padding);\n\n      let spacing = height / barData.length;\n\n      let min = d3.min(barData);\n      let max = d3.max(barData);\n\n      let xScale = d3.scaleLinear().domain([min, max]).range([0, width]).nice();\n\n      let color = d3\n        .scaleLinear()\n        .domain([min, 0, max])\n        .range(['darkred', 'lightgray', 'steelblue']);\n\n      let xAxis = d3.axisBottom();\n      xAxis.scale(xScale);\n\n      svg\n        .selectAll('.bar')\n        .data(barData)\n        .join('rect')\n        .classed('bar', true)\n        .attr('transform', 'translate(' + padding + ',' + padding + ')')\n        .attr('x', (d) => xScale(Math.min(0, d)))\n        .attr('y', (d, i) => i * spacing + 5)\n        .attr('width', (d) => Math.abs(xScale(d) - xScale(0)))\n        .attr('height', 20)\n        .style('fill', (d) => color(d))\n\n        // Post answer from the html to reVISit platform\n        .on('click', (e, d) => {\n          Revisit.postAnswers({\n            [taskID]: d,\n          });\n        });\n\n      svg\n        .append('g')\n        .attr(\n          'transform',\n          'translate(' + padding + ',' + (height + padding) + ')'\n        )\n        .call(xAxis);\n    });\n  <\/script>\n</html>\n"})}),"\n",(0,i.jsx)(n.p,{children:'One of the interesting pieces of the above code is that this HTML document interacts with reVISit in a two-way fashion. Firstly, note that the script to render the bar chart is wrapped in the \u201cRevisit.onDataReceive\u201d function. This listens for data that is passed to the HTML document via the "parameters" key in the configuration of the component. You will see shortly how we can use this HTML document as a template for multiple components with different datasets.'}),"\n",(0,i.jsx)(n.p,{children:"Furthermore, you\u2019ll see that we have also created an \u201conClick\u201d function and attached it to each of the bars in the bar graph. This click function uses the \u201cRevisit.postAnswers\u201d method to send information back to reVISit."}),"\n",(0,i.jsx)(n.p,{children:"Now that we have this HTML document in our study directory, we are ready to adjust our \u201cconfig.json\u201d file to account for these new components."}),"\n",(0,i.jsx)(n.p,{children:"In your \u201cconfig.json\u201d document, create new new key called \u201cbaseComponents\u201d as a sibling to the keys \u201cuiConfig\u201d, \u201ccomponents\u201d, \u201csequence\u201d, etc. In this newly created key, paste the code below:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'    "baseComponents": {\n        "bar-chart": {\n            "type": "website",\n            "response": [\n                {\n                    "id": "barChart",\n                    "prompt": "Your selected answer:",\n                    "required": true,\n                    "location": "belowStimulus",\n                    "type": "reactive"\n                }\n            ],\n            "path": "basic-questionnaire-study/assets/bar-chart.html",\n            "instructionLocation": "aboveStimulus"\n        \n        }\n    }\n'})}),"\n",(0,i.jsx)(n.p,{children:"This creates a component that new components can be based off of. Each component using the \u201cbar-chart\u201d as the value to the \u201cbaseComponent\u201d key will now automatically have the above key-value pairs included. In other words, there is no need to specify the type, response, path, or instruction location when creating these next components."}),"\n",(0,i.jsx)(n.p,{children:"In the components section, add the following objects:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'...\n"bar-chart-1":{\n    "baseComponent": "bar-chart",\n    "description": "A trial for the user to click the largest bar",\n    "instruction": "Click on the largest bar",\n    "parameters": {\n        "barData": [0.32, 0.01, 1.2, 1.3, 0.82, 0.4, 0.3]\n    }\n},\n"bar-chart-2":{\n    "baseComponent": "bar-chart",\n    "description": "A trial for the user to click the smallest bar",\n    "instruction": "Click on the smallest bar",\n    "parameters": {\n        "barData": [1.2, 1.2, 1.2, 1.3, 0.82, 0.4, 0.3]\n    }\n}\n...\n'})}),"\n",(0,i.jsx)(n.p,{children:'The "parameters" key is a dynamically valued key which is used to pass data to your components. When you add the "parameters" key, any data contained within the objet will be sent via the event bus as a message to the component. Since we designed the HTML above to listen for this message, we were able to parse these parameters and use them as variables to control the sizes of the various bar charts.'}),"\n",(0,i.jsx)(n.p,{children:'To finish this tutorial, add these two components ("bar-chart-1" and "bar-chart-2" to the sequence in config.json).'})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);