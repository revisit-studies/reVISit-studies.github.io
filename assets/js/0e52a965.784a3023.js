"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[5978],{9030:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"revisitpy/examples/example_simple_html","title":"Simple HTML Study","description":"Here we will get familiar with the syntax of the reVISitPy package. To do this, we\'ll recreate the config for the simple html study here. We\'ll start by first creating the study metadata and the UI configuration.","source":"@site/docs/revisitpy/examples/example_simple_html.md","sourceDirName":"revisitpy/examples","slug":"/revisitpy/examples/example_simple_html","permalink":"/docs/revisitpy/examples/example_simple_html","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Examples","permalink":"/docs/revisitpy/examples/"},"next":{"title":"Enhancing The Simple HTML Study","permalink":"/docs/revisitpy/examples/example_expanding_html_study"}}');var i=t(74848),r=t(28453);const a={},o="Simple HTML Study",c={},l=[{value:"Running the Server",id:"running-the-server",level:2},{value:"Launching The Widget",id:"launching-the-widget",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"simple-html-study",children:"Simple HTML Study"})}),"\n",(0,i.jsxs)(n.p,{children:["Here we will get familiar with the syntax of the reVISitPy package. To do this, we'll recreate the config for the simple html study ",(0,i.jsx)(n.a,{href:"https://github.com/revisit-studies/study/blob/main/public/demo-html-input/config.json",children:"here"}),". We'll start by first creating the study metadata and the UI configuration."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import revisitpy as rvt\n\nstudy_metadata = rvt.studyMetadata(\n    title=\'Passing Data From reVISit to HTML and back\',\n    version=\'pilot\',\n    authors=[\n        \'The reVISit Team\',\n        \'reVISitPy\'\n    ],\n    date=\'2025-01-20\',\n    description="A demo of how to pass visualization data from reVISit to HTML and send user answers from HTML back to the reVISit.",\n    organizations=[\n        "University of Utah",\n        "WPI",\n        "University of Toronto"\n    ]\n)\n\nui_config = rvt.uiConfig(\n    contactEmail="contact@revisit.dev",\n    helpTextPath="./assets/help.md",\n    logoPath="./assets/revisitLogoSquare.svg",\n    withProgressBar=True,\n    autoDownloadStudy=False,\n    autoDownloadTime=5000,\n    sidebar=False\n)\n'})}),"\n",(0,i.jsx)(n.h1,{id:"creating-response-and-base-components",children:"Creating Response and Base Components"}),"\n",(0,i.jsxs)(n.p,{children:["Next we'll create the response and the base component that we will be using. Note that in the reVISitPy package, the base components work in a slightly different way. Instead of directly adjusting the ",(0,i.jsx)(n.code,{children:'"baseComponent"'})," top level key in the configuration file, the inheritance is handled directly in the library. So, when you inspect a component that has a base, the component will already have all the appropriate properties from the base. Similar to the config, however, a base component in ",(0,i.jsx)(n.code,{children:"revisitpy"})," is defined in the same exact way as a regular component."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"response_one = rvt.response(\n    id='barChart',\n    prompt='Your selected answer:',\n    location='belowStimulus',\n    type='reactive',\n    required=True\n)\n\nbase_component = rvt.component(\n    component_name__='bar-chart',\n    type='website',\n    response=[response_one],\n    path=\"./assets/bar-chart-interaction.html\",\n    instructionLocation='aboveStimulus'\n)\n"})}),"\n",(0,i.jsx)(n.h1,{id:"generating-the-regular-components",children:"Generating the regular components"}),"\n",(0,i.jsx)(n.p,{children:"Since we have the base components set up, we can create our two other components which both inherit these bases."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# No need to define the response in this component since it will automatically be initialized as empty.\nintroduction = rvt.component(\n    component_name__='introduction',\n    type='markdown',\n    path='./assets/introduction.md' # <--- Relative path to asset from this notebook\n)\n\ncomp_one = rvt.component(\n    base__=base_component,\n    component_name__='bar-chart-1',\n    description=\"A trial for the user to click the largest bar\",\n    instruction='Click on the largest bar',\n    parameters={\n        \"barData\": [\n            0.32,\n            0.01,\n            1.2,\n            1.3,\n            0.82,\n            0.4,\n            0.3\n        ]\n    }\n)\n\ncomp_two = rvt.component(\n    base__=base_component,\n    component_name__='bar-chart-2',\n    description=\"A trial for the user to click the smallest bar\",\n    instruction='Click on the smallest bar',\n    parameters={\n        \"barData\": [\n            1.2,\n            1.2,\n            1.2,\n            1.3,\n            0.82,\n            0.4,\n            0.3\n        ]\n    }\n)\n"})}),"\n",(0,i.jsx)(n.h1,{id:"generate-the-sequence-and-final-config",children:"Generate The Sequence and Final Config"}),"\n",(0,i.jsx)(n.p,{children:"Now that all the individual pieces are created, we'll create the sequence and then the final configuration file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"sequence = rvt.sequence(\n    order='fixed',\n    components=[\n        introduction,\n        comp_one,\n        comp_two\n    ]\n)\n\n# Adding 'components' directly is not necessary since they are already defined in the original sequence.\nstudy = rvt.studyConfig(\n    schema='https://raw.githubusercontent.com/revisit-studies/study/v2.0.0/src/parser/StudyConfigSchema.json',\n    uiConfig=ui_config,\n    studyMetadata=study_metadata,\n    sequence=sequence\n)\n\nprint(study)\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-output",children:'{\n    "$schema": "https://raw.githubusercontent.com/revisit-studies/study/v2.0.0/src/parser/StudyConfigSchema.json",\n    "components": {\n        "introduction": {\n            "path": "./assets/introduction.md",\n            "response": [],\n            "type": "markdown"\n        },\n        "bar-chart-1": {\n            "description": "A trial for the user to click the largest bar",\n            "instruction": "Click on the largest bar",\n            "instructionLocation": "aboveStimulus",\n            "parameters": {\n                "barData": [\n                    0.32,\n                    0.01,\n                    1.2,\n                    1.3,\n                    0.82,\n                    0.4,\n                    0.3\n                ]\n            },\n            "path": "./assets/bar-chart-interaction.html",\n            "response": [\n                {\n                    "id": "barChart",\n                    "location": "belowStimulus",\n                    "prompt": "Your selected answer:",\n                    "required": true,\n                    "type": "reactive"\n                }\n            ],\n            "type": "website"\n        },\n        "bar-chart-2": {\n            "description": "A trial for the user to click the smallest bar",\n            "instruction": "Click on the smallest bar",\n            "instructionLocation": "aboveStimulus",\n            "parameters": {\n                "barData": [\n                    1.2,\n                    1.2,\n                    1.2,\n                    1.3,\n                    0.82,\n                    0.4,\n                    0.3\n                ]\n            },\n            "path": "./assets/bar-chart-interaction.html",\n            "response": [\n                {\n                    "id": "barChart",\n                    "location": "belowStimulus",\n                    "prompt": "Your selected answer:",\n                    "required": true,\n                    "type": "reactive"\n                }\n            ],\n            "type": "website"\n        }\n    },\n    "sequence": {\n        "components": [\n            "introduction",\n            "bar-chart-1",\n            "bar-chart-2"\n        ],\n        "order": "fixed"\n    },\n    "studyMetadata": {\n        "authors": [\n            "The reVISit Team",\n            "reVISitPy"\n        ],\n        "date": "2025-01-20",\n        "description": "A demo of how to pass visualization data from reVISit to HTML and send user answers from HTML back to the reVISit.",\n        "organizations": [\n            "University of Utah",\n            "WPI",\n            "University of Toronto"\n        ],\n        "title": "Passing Data From reVISit to HTML and back",\n        "version": "pilot"\n    },\n    "uiConfig": {\n        "autoDownloadStudy": false,\n        "autoDownloadTime": 5000.0,\n        "contactEmail": "contact@revisit.dev",\n        "helpTextPath": "./assets/help.md",\n        "logoPath": "./assets/revisitLogoSquare.svg",\n        "sidebar": false,\n        "withProgressBar": true\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h1,{id:"visualizing-the-study",children:"Visualizing the Study"}),"\n",(0,i.jsxs)(n.p,{children:["Now that we have the study completed, let's use the widget to visualize this. We'll start by using the ",(0,i.jsx)(n.code,{children:"revisitpy_server"})," package to run a local copy of the reVISit repo."]}),"\n",(0,i.jsx)(n.h2,{id:"running-the-server",children:"Running the Server"}),"\n",(0,i.jsxs)(n.p,{children:["Simply import the ",(0,i.jsx)(n.code,{children:"revisitpy_server"})," package and call ",(0,i.jsx)(n.code,{children:"rs.serve()"}),". We set the return value of ",(0,i.jsx)(n.code,{children:"rs.serve()"})," to ",(0,i.jsx)(n.code,{children:"process"})," so that we can terminate the process afterwards if desired."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import revisitpy_server as rs\n\nprocess = rs.serve()\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-output",children:"Server is running in the background at http://localhost:8080\n"})}),"\n",(0,i.jsx)(n.h2,{id:"launching-the-widget",children:"Launching The Widget"}),"\n",(0,i.jsxs)(n.p,{children:["Launching the widget is also straightforward -- especially when using the ",(0,i.jsx)(n.code,{children:"revisitpy_server"})," package."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"w = rvt.widget(study, server=True)\n# In your own Jupyter notebook, calling `w` will now display the widget in a fully interactive manner.\n# w\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-output",children:"Copying file from ./assets/introduction.md to /Users/bbollen23/revisit-py-examples/.venv/lib/python3.12/site-packages/revisitpy_server/static/__revisit-widget/assets/introduction.md\nCopying file from ./assets/bar-chart-interaction.html to /Users/bbollen23/revisit-py-examples/.venv/lib/python3.12/site-packages/revisitpy_server/static/__revisit-widget/assets/bar-chart-interaction.html\nCopying file from ./assets/bar-chart-interaction.html to /Users/bbollen23/revisit-py-examples/.venv/lib/python3.12/site-packages/revisitpy_server/static/__revisit-widget/assets/bar-chart-interaction.html\nCopying file from ./assets/help.md to /Users/bbollen23/revisit-py-examples/.venv/lib/python3.12/site-packages/revisitpy_server/static/__revisit-widget/assets/help.md\nCopying file from ./assets/revisitLogoSquare.svg to /Users/bbollen23/revisit-py-examples/.venv/lib/python3.12/site-packages/revisitpy_server/static/__revisit-widget/assets/revisitLogoSquare.svg\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(96540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);