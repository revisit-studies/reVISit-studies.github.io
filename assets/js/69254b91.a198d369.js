"use strict";(globalThis.webpackChunkdocs_website=globalThis.webpackChunkdocs_website||[]).push([[55243],{11470:(e,n,r)=>{r.d(n,{A:()=>j});var t=r(96540),a=r(34164),o=r(17559),s=r(23104),i=r(56347),l=r(205),c=r(57485),u=r(31682),d=r(70679);function p(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:n,children:r}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return p(e).map(({props:{value:e,label:n,attributes:r,default:t}})=>({value:e,label:n,attributes:r,default:t}))}(r);return function(e){const n=(0,u.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,r])}function m({value:e,tabValues:n}){return n.some(n=>n.value===e)}function f({queryString:e=!1,groupId:n}){const r=(0,i.W6)(),a=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(a),(0,t.useCallback)(e=>{if(!a)return;const n=new URLSearchParams(r.location.search);n.set(a,e),r.replace({...r.location,search:n.toString()})},[a,r])]}function g(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,o=h(e),[s,i]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find(e=>e.default)??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o})),[c,u]=f({queryString:r,groupId:a}),[p,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,a]=(0,d.Dv)(n);return[r,(0,t.useCallback)(e=>{n&&a.set(e)},[n,a])]}({groupId:a}),b=(()=>{const e=c??p;return m({value:e,tabValues:o})?e:null})();(0,l.A)(()=>{b&&i(b)},[b]);return{selectedValue:s,selectValue:(0,t.useCallback)(e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),g(e)},[u,g,o]),tabValues:o}}var b=r(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=r(74848);function w({className:e,block:n,selectedValue:r,selectValue:t,tabValues:o}){const i=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),c=e=>{const n=e.currentTarget,a=i.indexOf(n),s=o[a].value;s!==r&&(l(n),t(s))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=i.indexOf(e.currentTarget)+1;n=i[r]??i[0];break}case"ArrowLeft":{const r=i.indexOf(e.currentTarget)-1;n=i[r]??i[i.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:o.map(({value:e,label:n,attributes:t})=>(0,x.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{i.push(e)},onKeyDown:u,onClick:c,...t,className:(0,a.A)("tabs__item",v.tabItem,t?.className,{"tabs__item--active":r===e}),children:n??e},e))})}function _({lazy:e,children:n,selectedValue:r}){const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=o.find(e=>e.props.value===r);return e?(0,t.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function y(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,a.A)(o.G.tabs.container,"tabs-container",v.tabList),children:[(0,x.jsx)(w,{...n,...e}),(0,x.jsx)(_,{...n,...e})]})}function j(e){const n=(0,b.A)();return(0,x.jsx)(y,{...e,children:p(e.children)},String(n))}},19365:(e,n,r)=>{r.d(n,{A:()=>s});r(96540);var t=r(34164);const a={tabItem:"tabItem_Ymn6"};var o=r(74848);function s({children:e,hidden:n,className:r}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,r),hidden:n,children:e})}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>i});var t=r(96540);const a={},o=t.createContext(a);function s(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(o.Provider,{value:n},e.children)}},43261:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"designing-studies/config-generation/random-sample","title":"Example 2: Random Sample","description":"In the previous example, we generated 100 trials with varying speeds and organized them into a fixed order sequence. Here, we will modify this click-accuracy test by introducing different colors for the on-screen dot. The new study will still present trials in increasing speed order, with the dot\'s color randomized for each trial.","source":"@site/versioned_docs/version-v1.0.6/designing-studies/config-generation/random-sample.md","sourceDirName":"designing-studies/config-generation","slug":"/designing-studies/config-generation/random-sample","permalink":"/docs/v1.0.6/designing-studies/config-generation/random-sample","draft":false,"unlisted":false,"tags":[],"version":"v1.0.6","frontMatter":{},"sidebar":"docs","previous":{"title":"Example 1: Fixed Order","permalink":"/docs/v1.0.6/designing-studies/config-generation/fixed-order"},"next":{"title":"Example 3: Latin Square","permalink":"/docs/v1.0.6/designing-studies/config-generation/latin-square"}}');var a=r(74848),o=r(28453),s=r(11470),i=r(19365);const l={},c="Example 2: Random Sample",u={},d=[];function p(e){const n={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"example-2-random-sample",children:"Example 2: Random Sample"})}),"\n",(0,a.jsx)(n.p,{children:"In the previous example, we generated 100 trials with varying speeds and organized them into a fixed order sequence. Here, we will modify this click-accuracy test by introducing different colors for the on-screen dot. The new study will still present trials in increasing speed order, with the dot's color randomized for each trial."}),"\n",(0,a.jsx)(n.p,{children:"Instead of having one component for each speed, we will have five different components for each speed -- each representing a different color. In our sequence, we will have each of these sets fo components as a single random block. Then, we set the number of samples value to 1 so that we will randomly pick one of the colors from the component block to display to the user."}),"\n",(0,a.jsx)(n.p,{children:"Below is the intended sequence output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "order": "fixed",\n  "components": [\n    "introduction",\n    {\n      "order": "random",\n      "numSamples": 1,\n      "components": [\n        "trial_300_red",\n        "trial_300_blue",\n        "trial_300_green",\n        "trial_300_orange",\n        "trial_300_pink"\n      ]\n    },\n    {\n      "order": "random",\n      "numSamples": 1,\n      "components": [\n        "trial_310_red",\n        "trial_310_blue",\n        "trial_310_green",\n        "trial_310_orange",\n        "trial_310_pink"\n      ]\n    },\n    {\n      "order": "random",\n      "numSamples": 1,\n      "components": [\n        "trial_320_red",\n        "trial_320_blue",\n        "trial_320_green",\n        "trial_320_orange",\n        "trial_320_pink"\n      ]\n    },\n    \n    ...\n\n'})}),"\n",(0,a.jsx)(n.p,{children:"We will start by generating the trials."}),"\n","\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(i.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'colorList = [\'red\',\'blue\',\'green\',\'orange\',\'pink\']\n# Generate a list of increasing speeds starting at 300 and increasing to 400 with increments of 10.\nspeedList = [300 + i * 10 for i in range(10)]\n\n\ndef createTrials():\n    allTrials = {}\n    for s in speedList: \n        # Create a new trial/component for each color in our color list.\n        for c in colorList:\n            allTrials["trial_" + str(s) + \'_\' + c] = {  \n                "baseComponent": "trial",\n                "meta": {\n                    "nr-dots": 1,\n                    "speed": s,\n                    "color": c,\n                },\n                "parameters": {\n                    "speed": s,\n                    "color": c,\n                    "taskid": "accuracy"\n                }\n            }\n    return allTrials\n\ntrials = createTrials()\n\n'})})}),(0,a.jsx)(i.A,{value:"node",label:"Node.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'const colorList = ["red", "blue", "green", "orange", "pink"];\n// Generate a list of increasing speeds starting at 300 and increasing to 400 with increments of 10.\nconst speedList = Array.from({ length: 10 }, (_, i) => 300 + i * 10);\n\nfunction createTrials() {\n  const allTrials = {};\n  speedList.forEach((speed) => {\n    // Create a new trial/component for each color in our color list.\n    colorList.forEach((color) => {\n      allTrials[`trial_${speed}_${color}`] = {\n        baseComponent: "trial",\n        meta: {\n          "nr-dots": 1,\n          speed: speed,\n          color: color,\n        },\n        parameters: {\n          speed: speed,\n          color: color,\n          taskid: "accuracy",\n        },\n      };\n    });\n  });\n  return allTrials;\n}\ntrials = createTrials()\n\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"To generate the sequence, we create a random subsequence for each speed where the components are the varying colors at that speed."}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(i.A,{value:"python",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'\ndef createOrder():  \n    components = ["introduction"]  \n    # Create the sequence structure\n    sequence = {\n        "order": "fixed",  \n    }\n\n    for speed in speedList:\n        subComponent = {\n            "order": "random",\n            "numSamples": 1,\n            "components": []\n        }\n        for color in colorList:\n            subComponent["components"].append("trial_" + str(speed) + \'_\' + color)\n        components.append(subComponent)\n    \n    sequence["components"] = components\n    return sequence\n\n\nseq = createOrder()\n'})})}),(0,a.jsx)(i.A,{value:"node",label:"Node.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'function createOrder() {\n  const components = ["introduction"];\n  const sequence = {\n    order: "fixed",\n  };\n\n  speedList.forEach((speed) => {\n    const subComponent = {\n      order: "random",\n      numSamples: 1,\n      components: [],\n    };\n    colorList.forEach((color) => {\n      subComponent.components.push(`trial_${speed}_${color}`);\n    });\n    components.push(subComponent);\n  });\n\n  sequence.components = components;\n  return sequence;\n}\n\nconst seq = createOrder();\n\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"You can check the complete code and output at CodeSandbox using the link below:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/festive-vaughan-ggl46v",children:"Python"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://codesandbox.io/p/devbox/tg3st5",children:"Node"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);